---
apiVersion: batch/v1
kind: Job
metadata:
  name: cray-smd-job-deleter
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "0"
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: “false”
    spec:
      restartPolicy: OnFailure
      serviceAccountName: "cray-smd-job-deleter"
      containers:
        - name: job-deleter
          image: "{{ .Values.kubectl.image.repository }}:{{ .Values.kubectl.image.tag }}"
          imagePullPolicy: "{{ .Values.kubectl.image.pullPolicy }}"
          command:
          - /bin/sh
          - -c
          - set -x;
            echo "Deleting smd-init Job";
            kubectl -n services delete job cray-smd-init;
            while [ "`kubectl -n services get pods -l app=cray-smd-init -o jsonpath='{.items}'`" != "[]" ];
            do
              echo "Waiting for previous job to be removed entirely...";
              sleep 1;
            done;
            echo "Old job deleted.";
            exit 0
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cray-smd-init
  labels:
    app: cray-smd-init
spec:
  template:
    metadata:
      labels:
        app: cray-smd-init
    spec:
      restartPolicy: OnFailure
      serviceAccountName: "jobs-watcher"
      containers:
        - name: cray-smd-init
          image: {{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}
          env:
            # NOTE: overridden in container if POSTGRES_HOST is set
            - name: SMD_DBHOST
              value: cray-smd-postgres
            # NOTE: overwritten in container if POSTGRES_PORT is set
            - name: SMD_DBPORT
              value: "5432"
            - name: SMD_DBNAME
              value: "hmsds"
            - name: SMD_DBUSER
              valueFrom:
                secretKeyRef:
                  name: hmsdsuser.cray-smd-postgres.credentials
                  key: username
            - name: SMD_DBPASS
              valueFrom:
                secretKeyRef:
                  name: hmsdsuser.cray-smd-postgres.credentials
                  key: password
            - name: SMD_DBOPTS
              value: ""
          volumeMounts:
            - mountPath: "/persistent_migrations"
              name: schema
          command: ["/entrypoint.sh"]
          args: ["smd-init"]
      volumes:
        - name: schema
          persistentVolumeClaim:
            claimName: cray-smd-init-pvc
